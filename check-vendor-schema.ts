import { connect } from '@planetscale/database';
import * as dotenv from 'dotenv';

dotenv.config();

const connection = connect({ url: process.env.DATABASE_URL! });

async function checkSchema() {
  console.log('üîç rentcar_vendors ÌÖåÏù¥Î∏î Íµ¨Ï°∞ ÌôïÏù∏...\n');

  // DESCRIBE ÎåÄÏã† ÏÉòÌîå Î†àÏΩîÎìúÎ°ú Ïª¨Îüº ÌôïÏù∏
  const result = await connection.execute(
    'SELECT * FROM rentcar_vendors LIMIT 1'
  );

  if (result.rows && result.rows.length > 0) {
    console.log('üìä ÌÖåÏù¥Î∏î Ïª¨Îüº:', Object.keys(result.rows[0]));
    console.log('\nÏÉòÌîå Îç∞Ïù¥ÌÑ∞:');
    console.log(result.rows[0]);
  } else {
    console.log('‚ö†Ô∏è ÌÖåÏù¥Î∏îÏù¥ ÎπÑÏñ¥ÏûàÏäµÎãàÎã§');
  }

  // Î™®Îì† Î≤§Îçî Ï°∞Ìöå
  const allVendors = await connection.execute('SELECT * FROM rentcar_vendors');
  console.log('\nüìä Ï†ÑÏ≤¥ Î≤§Îçî Ïàò:', allVendors.rows?.length);
  console.log('Ï†ÑÏ≤¥ Î≤§Îçî Î™©Î°ù:');
  allVendors.rows?.forEach((v: any) => {
    console.log(`  - ID: ${v.id}, user_id: ${v.user_id}, Ïù¥Î¶Ñ: ${v.business_name || v.vendor_name}, status: ${v.status}`);
  });
}

checkSchema().catch(console.error);
