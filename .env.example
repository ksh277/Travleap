# PlanetScale Database Configuration
VITE_PLANETSCALE_HOST=your_planetscale_host.psdb.cloud
VITE_PLANETSCALE_USERNAME=your_planetscale_username
VITE_PLANETSCALE_PASSWORD=your_planetscale_password

# API Configuration
VITE_API_URL=https://your-api-domain.com

# App Configuration
VITE_APP_NAME=Travelap
VITE_APP_VERSION=1.0.0
VITE_APP_ENV=production

# External Services (if needed)
VITE_GOOGLE_MAPS_API_KEY=your-google-maps-api-key-here
VITE_GOOGLE_OAUTH_CLIENT_ID=your_google_oauth_client_id
VITE_KAKAO_APP_KEY=your_kakao_app_key

# Analytics (optional)
VITE_GA_TRACKING_ID=your_google_analytics_id

# Vercel Blob Storage Configuration
VITE_BLOB_READ_WRITE_TOKEN=your_vercel_blob_token

# Email Service (optional)
VITE_EMAILJS_SERVICE_ID=your_emailjs_service_id
VITE_EMAILJS_TEMPLATE_ID=your_emailjs_template_id
VITE_EMAILJS_PUBLIC_KEY=your_emailjs_public_key

# Payment Gateway - 포트원 (optional)
VITE_PORTONE_STORE_ID=your_portone_store_id
VITE_PORTONE_CHANNEL_KEY=your_portone_channel_key

# ===== Toss Payments (토스 결제) =====
# 신청: https://www.tosspayments.com/
# 테스트 키: https://docs.tosspayments.com/reference/using-api/api-keys
#
# 🔄 운영 키 전환 가이드:
# 1. TEST 키 유지 (롤백용): TOSS_*_TEST_* 변수에 테스트 키 저장
# 2. LIVE 키 배치: TOSS_*_LIVE_* 변수에 실제 운영 키 입력
# 3. TOSS_MODE 환경 변수로 전환 (test → live)
# 4. 문제 발생 시 TOSS_MODE=test로 즉시 롤백
#
# 🎯 운영 모드 선택 (test 또는 live)
TOSS_MODE=test
#
# ===== TEST 키 (테스트 환경용, 롤백용으로 유지) =====
# ✅ VITE_TOSS_CLIENT_KEY_TEST: 프론트엔드에서 결제 위젯 초기화에 사용 (안전)
VITE_TOSS_CLIENT_KEY_TEST=test_ck_D5GePWvyJnrK0W0k6q8gLzN97Eoq
# ✅ TOSS_SECRET_KEY_TEST: 백엔드 전용 시크릿 키 (서버 환경 변수)
TOSS_SECRET_KEY_TEST=test_sk_zXLkKEypNArWmo50nX3lmeaxYG5R
# Toss Payments 웹훅 시크릿 (서명 검증용)
TOSS_WEBHOOK_SECRET_TEST=your_webhook_secret_test_here
#
# ===== LIVE 키 (실제 운영 환경용) =====
# ✅ VITE_TOSS_CLIENT_KEY_LIVE: 실제 운영 클라이언트 키
VITE_TOSS_CLIENT_KEY_LIVE=live_ck_REPLACE_WITH_YOUR_LIVE_CLIENT_KEY
# ✅ TOSS_SECRET_KEY_LIVE: 실제 운영 시크릿 키 (절대 노출 금지!)
TOSS_SECRET_KEY_LIVE=live_sk_REPLACE_WITH_YOUR_LIVE_SECRET_KEY
# Toss Payments 웹훅 시크릿 (운영 환경용, Toss 개발자 센터에서 발급)
TOSS_WEBHOOK_SECRET_LIVE=your_webhook_secret_live_here_change_in_production
#
# ===== 현재 사용 중인 키 (자동 선택, 수동 설정 불필요) =====
# 아래 키들은 TOSS_MODE에 따라 자동으로 설정됩니다.
# 수동으로 설정하지 마세요! server-api.ts에서 자동 로딩합니다.
# VITE_TOSS_CLIENT_KEY=${TOSS_MODE === 'live' ? VITE_TOSS_CLIENT_KEY_LIVE : VITE_TOSS_CLIENT_KEY_TEST}
# TOSS_SECRET_KEY=${TOSS_MODE === 'live' ? TOSS_SECRET_KEY_LIVE : TOSS_SECRET_KEY_TEST}
# TOSS_WEBHOOK_SECRET=${TOSS_MODE === 'live' ? TOSS_WEBHOOK_SECRET_LIVE : TOSS_WEBHOOK_SECRET_TEST}

# ===== PMS (숙박) API 연동 =====
# CloudBeds API - 호텔 PMS 시스템
# 신청: https://www.cloudbeds.com/api/
# AdminPage > 상품 추가 > 숙박 > PMS 연동 버튼에서 사용
PMS_CLOUDBEDS_API_KEY=your_cloudbeds_api_key
PMS_CLOUDBEDS_BASE_URL=https://api.cloudbeds.com/v1

# Booking.com API (선택사항)
# 신청: https://www.booking.com/content/affiliates.html
PMS_BOOKING_API_KEY=your_booking_api_key
PMS_BOOKING_AFFILIATE_ID=your_booking_affiliate_id

# ===== 렌트카 API 연동 =====
# Rentalcars.com API
# 신청: https://www.rentalcars.com/Affiliates.do
# AdminPage > 상품 추가 > 렌트카 > 렌트카 API 설정에서 사용
RENTALCARS_API_KEY=your_rentalcars_api_key
RENTALCARS_AFFILIATE_ID=your_rentalcars_affiliate_id
RENTALCARS_BASE_URL=https://api.rentalcars.com/v1

# CartTrawler API (선택사항)
# 신청: https://www.cartrawler.com/ct/
CARTRAWLER_API_KEY=your_cartrawler_api_key
CARTRAWLER_CLIENT_ID=your_cartrawler_client_id

# ===== Redis 캐싱 (선택사항) =====
# PMS/렌트카 API 응답 캐싱 및 실시간 재고 관리용
# 설치: docker run -d -p 6379:6379 redis:7-alpine
# 없으면 자동으로 인메모리 캐시 사용 (재시작 시 캐시 삭제됨)
REDIS_URL=redis://localhost:6379

# ===== Webhook 보안 (선택사항) =====
# PMS에서 실시간 재고/가격 업데이트 받을 때 서명 검증용
PMS_WEBHOOK_SECRET=your_webhook_secret_key_min_32_chars

# ===== Slack 알림 연동 (선택사항) =====
# Slack Incoming Webhook 생성 가이드:
# 1. https://api.slack.com/apps 접속
# 2. "Create New App" > "From scratch" 선택
# 3. 앱 이름 입력 (예: Travleap Alerts)
# 4. "Incoming Webhooks" 활성화
# 5. "Add New Webhook to Workspace" 클릭
# 6. 알림받을 채널 선택 (예: #alerts, #errors)
# 7. 생성된 Webhook URL 복사하여 아래에 입력
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL
# Slack 알림 활성화 여부 (true 또는 false)
ENABLE_SLACK_NOTIFICATIONS=false

# Server Configuration
PORT=3004